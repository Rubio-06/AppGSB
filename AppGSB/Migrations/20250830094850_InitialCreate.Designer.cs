// <auto-generated />
using System;
using AppGSB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppGSB.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250830094850_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AppGSB.Models.ExpenseLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExpenseReportId")
                        .HasColumnType("int")
                        .HasColumnName("ExpenseReportId");

                    b.Property<int>("ExpenseTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ExpenseTypeId");

                    b.Property<ulong>("IsApproved")
                        .HasColumnType("bit")
                        .HasColumnName("IsApproved");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<string>("RefusalReason")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("RefusalReason");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalAmount");

                    b.Property<decimal>("UnitAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("UnitAmount");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseReportId");

                    b.HasIndex("ExpenseTypeId");

                    b.ToTable("ExpenseLines");
                });

            modelBuilder.Entity("AppGSB.Models.ExpenseOutLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Amount");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("date")
                        .HasColumnName("ExpenseDate");

                    b.Property<int>("ExpenseReportId")
                        .HasColumnType("int")
                        .HasColumnName("ExpenseReportId");

                    b.Property<ulong>("IsApproved")
                        .HasColumnType("bit")
                        .HasColumnName("IsApproved");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Label");

                    b.Property<int?>("ReceiptId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiptId");

                    b.Property<string>("RefusalReason")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("RefusalReason");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseReportId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ExpenseOutLines");
                });

            modelBuilder.Entity("AppGSB.Models.ExpenseReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ApprovedAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ApprovedAmount");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date")
                        .HasColumnName("CreateDate");

                    b.Property<DateTime>("MonthYear")
                        .HasColumnType("date")
                        .HasColumnName("MonthYear");

                    b.Property<int>("NumberOfReceipts")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfReceipts");

                    b.Property<string>("RefusalReason")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("RefusalReason");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("UpdateDate");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<DateTime?>("ValidationDate")
                        .HasColumnType("date")
                        .HasColumnName("ValidationDate");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ExpenseReports");
                });

            modelBuilder.Entity("AppGSB.Models.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("FileName");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("FilePath");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("date")
                        .HasColumnName("UploadDate");

                    b.HasKey("Id");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("AppGSB.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<ulong>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExpenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("CreatedAt");

                    b.Property<ulong>("IsFlatRate")
                        .HasColumnType("bit")
                        .HasColumnName("IsFlatRate");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Label");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Rate");

                    b.HasKey("Id");

                    b.ToTable("ExpenseTypes");
                });

            modelBuilder.Entity("AppGSB.Models.ExpenseLine", b =>
                {
                    b.HasOne("AppGSB.Models.ExpenseReport", "ExpenseReport")
                        .WithMany("ExpenseLines")
                        .HasForeignKey("ExpenseReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseType", "ExpenseType")
                        .WithMany("ExpenseLines")
                        .HasForeignKey("ExpenseTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExpenseReport");

                    b.Navigation("ExpenseType");
                });

            modelBuilder.Entity("AppGSB.Models.ExpenseOutLine", b =>
                {
                    b.HasOne("AppGSB.Models.ExpenseReport", "ExpenseReport")
                        .WithMany("ExpenseOutLines")
                        .HasForeignKey("ExpenseReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGSB.Models.Receipt", "Receipt")
                        .WithMany("ExpenseOutLines")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ExpenseReport");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("AppGSB.Models.ExpenseReport", b =>
                {
                    b.HasOne("AppGSB.Models.User", "User")
                        .WithMany("ExpenseReports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AppGSB.Models.ExpenseReport", b =>
                {
                    b.Navigation("ExpenseLines");

                    b.Navigation("ExpenseOutLines");
                });

            modelBuilder.Entity("AppGSB.Models.Receipt", b =>
                {
                    b.Navigation("ExpenseOutLines");
                });

            modelBuilder.Entity("AppGSB.Models.User", b =>
                {
                    b.Navigation("ExpenseReports");
                });

            modelBuilder.Entity("ExpenseType", b =>
                {
                    b.Navigation("ExpenseLines");
                });
#pragma warning restore 612, 618
        }
    }
}
